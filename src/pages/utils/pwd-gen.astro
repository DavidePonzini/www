---
import Background from "../../components/Background.astro";
import Section from "../../components/Section.astro";
import Page from "../../layouts/Page.astro";
---

<Page title="Password generator">
    <Background img="/res/010101.jpg">


        <Section title="Password generator">
            <form action="pwd-gen.php" method="get">
                <div class="row">
                    <div class="col"></div>
                    <div class="col-lg">
                        <div class="input-group mb-3">
                            <span class="input-group-text">Password length</span>
                            <input type="number" class="form-control" id="len" name="len" value="32" min="1" max="255">
                        </div>
                        <div class="input-group mb-1">
                            <div class="input-group-text">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="charactersL" name="charactersL" checked>
                                </div>        
                            </div>
                            <input type="text" class="form-control" value="Lowercase" disabled>
                        </div>
                        <div class="input-group mb-1">
                            <div class="input-group-text">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="charactersU" name="charactersU" checked>
                                </div>        
                            </div>
                            <input type="text" class="form-control" value="Uppercase" disabled>
                        </div>
                        <div class="input-group mb-1">
                            <div class="input-group-text">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="charactersD" name="charactersD" checked>
                                </div>        
                            </div>
                            <input type="text" class="form-control" value="Digits" disabled>
                        </div>
                        <div class="input-group mb-3">
                            <div class="input-group-text">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="charactersS" name="charactersS" checked>
                                </div>        
                            </div>
                            <input type="text" class="form-control" value="Symbols" disabled>
                        </div>
                        <button type="submit" id="submit" class="btn btn-primary mb-3">Generate password</button>
                    </div>
                    <div class="col"></div>
                </div>
                <div class="input-group mb-3">
                    <input type="text" class="form-control center monospace" id="result" readonly>
                    <button class="btn btn-primary" type="button" id="copy">Copy</button>
                </div>
            </form>
        </Section>
    </Background>
</Page>

<script>
    $(function() {
        $('#submit').on('click', function(event) {
            event.preventDefault(); // Prevents the form from submitting and the page from refreshing
            generate_password();
        });

        $('#copy').on('click', copy);
    });

    function copy() {
        let text = $('#result').val() as string;

        if (text) {
            navigator.clipboard.writeText(text).then(() => {
                $('#copy').text('Copied!');
                setTimeout(() => {
                    $('#copy').text('Copy');
                }, 2000);
            });
        }
    }

    function generate_password() {
        let length = parseInt($('#len').val() as string);
        let useLower = $('#charactersL').is(':checked');
        let useUpper = $('#charactersU').is(':checked');
        let useDigits = $('#charactersD').is(':checked');
        let useSymbols = $('#charactersS').is(':checked');

        let password = generatePassword(length, useLower, useUpper, useDigits, useSymbols);
        $('#result').val(password);
    };

    function generatePassword(length: number, useLower: boolean, useUpper: boolean, useDigits: boolean, useSymbols: boolean) {
        let lowercase = 'abcdefghijklmnopqrstuvwxyz';
        let uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        let digits = '0123456789';
        let symbols = '!@#$%&*?.,<>;/';
        
        let allChars = '';
        let mustInclude = [];
        
        // Build the character pool and ensure at least one character from each selected set
        if (useLower) {
            allChars += lowercase;
            mustInclude.push(getRandomChar(lowercase));
        }
        if (useUpper) {
            allChars += uppercase;
            mustInclude.push(getRandomChar(uppercase));
        }
        if (useDigits) {
            allChars += digits;
            mustInclude.push(getRandomChar(digits));
        }
        if (useSymbols) {
            allChars += symbols;
            mustInclude.push(getRandomChar(symbols));
        }

        // Check if at least one character set is selected
        if (allChars === '')
            return '';

        let password = mustInclude.join('');

        // Generate random characters to fill the remaining length
        while(password.length < length)
            password += getRandomChar(allChars);

        // Shuffle the password to mix the required characters
        password = shuffle(password);

        return password;
    }

    function getRandomChar(characters: string) {
        let randomIndex = Math.floor(Math.random() * characters.length);
        return characters.charAt(randomIndex);
    }

    function shuffle(str: string): string {
        return str
            .split('')
            .map(value => ({ value, sort: Math.random() }))
            .sort((a, b) => a.sort - b.sort)
            .map(({ value }) => value)
            .join('');
    }
</script>

<style>
    #copy {
        min-width: 85px;
    }
</style>
